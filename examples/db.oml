<?xml version="1.0"?>
<!-- example that demonstrates Java Database Extensions -->
<o:program xmlns:o="http://www.o-xml.org/lang/" 
	   xmlns:ex="http://www.o-xml.org/examples/"
	   xmlns:db="http://www.o-xml.com/db/">
  <o:param name="user-id" select="666"/>

  <db:connection log="true">
    <db:url>jdbc:mysql://localhost:3306/test</db:url>
    <db:driver>com.mysql.jdbc.Driver</db:driver>
  </db:connection>

  <db:execute sql="create table if not exists users(id int primary key auto_increment, name varchar(30), password varchar(30))"/>

  <o:variable name="name">
    <db:execute sql="select name from users where id={$user-id}">{$name}</db:execute>
  </o:variable>

  <o:log msg="name: {$name}"/>

  <o:if test="not($name)">
    <o:set name="'belzebuub'"/>
    <db:execute sql="insert into users(id, name, realname) values({$user-id}, {db:quote($name)}, 'the goofball')"/>
  </o:if>

  <db:query name="setUserName">
    <db:param name="userId" type="Number"/>
    <db:param name="name" type="String"/>
    <db:sql>update users set name = {$name} where id = {$userId}</db:sql>
  </db:query>

  <db:call query="setUserName" userId="$user-id" name="'figaro'"/>

  <db:execute sql="select name from users where id={$user-id}">
    <user name="{$name}"/>
  </db:execute>

  <db:call query="setUserName" userId="$user-id" name="$name"/>

  <db:execute sql="select name from users where id={$user-id}">
    <user>{$name}</user>
  </db:execute>

  <db:query name="user">
    <db:param name="userId" type="Number"/>
    <db:sql>select * from users where id = {$userId}</db:sql>
    <db:result>
      <user userId="{$id}">
	<name name="{$name}">{$name}</name>
	<description>Real name: {$realname}</description>
      </user>
    </db:result>
  </db:query>

  <db:call query="user" userId="$user-id"/>

  <!-- test recursive queries -->
  <db:query name="postings-per-user">
    <db:sql>select id, name from users</db:sql>
    <db:result>
      <user userId="{$id}">
	<name name="{$name}">{$name}</name>
	<postings>
	  <db:call query="user-postings" userId="$id"/>
	</postings>
      </user>
    </db:result>
  </db:query>

  <db:query name="user-postings">
    <db:param name="userId" type="Number"/>
    <db:sql>select id, subject from posting where owner = {$userId}</db:sql>
    <db:result>
      <posting postingId="{$id}">
	<subject>{$subject}</subject>
	<db:call query="sub-postings" parentId="$id"/>
      </posting>
    </db:result>
  </db:query>

  <!-- self recursive query! -->
  <db:query name="sub-postings">
    <db:param name="parentId" type="Number"/>
    <db:sql>select id, subject from posting where parent = {$parentId}</db:sql>
      <posting postingId="{$id}">
	<subject>{$subject}</subject>
	<db:call query="sub-postings" parentId="$id"/>
    </posting>
  </db:query>

  <db:call query="postings-per-user"/>

  <db:call query="user-postings" userId="$user-id"/>

  <db:function name="PostingsPerUser">
    <db:param name="userId" type="Number"/>
    <db:sql>select id, subject from posting where owner = {$userId}</db:sql>
    <db:result>
      <posting postingId="{$id}">
	<subject>{$subject}</subject>
	<db:call query="sub-postings" parentId="$id"/>
      </posting>
    </db:result>
  </db:function>

  <o:for-each in="1 2 3 4 5 6 7 8 9 10">
    <o:log msg="user {.} postings {count(PostingsPerUser(number(.))/posting)}."/>
  </o:for-each>

  <o:type name="User">
    <o:variable name="userId"/>

    <o:constructor>
      <o:param name="userId"/>
      <o:do/>
    </o:constructor>

    <db:function name="CountPostings">
      <db:sql>select count(id) as count from posting where owner = {$userId}</db:sql>
      <db:result>{$count}</db:result>
    </db:function>

  </o:type>

  <o:for-each in="1 2 3 4 5 6 7 8 9 10">
    <o:log msg="user {.} postings {User(.).CountPostings()}."/>
  </o:for-each>

</o:program>
