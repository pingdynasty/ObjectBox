<?xml version="1.0"?>
<o:type name="Table" java:class="TableNode"
  xmlns:java="http://www.o-xml.org/java"
  xmlns:o="http://www.o-xml.org/lang/" 
  xmlns:doc="http://www.o-xml.org/namespace/document/"
  xmlns:ut="http://www.o-xml.org/namespace/unit-test/">

  <doc:p>
    <doc:type/> implements a two-dimensional array of Nodes.
  </doc:p>

  <o:parent name="Node"/>

  <o:variable name="values" java:class="Node[][]"/>

  <o:constructor>
    <o:param name="other" type="Table"/>
    <o:param name="deep" java:class="boolean"/>
    <java:code>
	values = new Node[other.values.length][other.values[0].length];
        // TableNodes are not immutable
	// tbd copy over deep or shallow
	System.arraycopy(values, 0, other.values, 0, values.length);
	// tbd check if arraycopy copies over array of arrays
//	Node[][] copy = new Node[values.length][values[0].length];
//	System.arraycopy(values, 0, copy, 0, values.length);
    </java:code>
  </o:constructor>

  <java:code>
    public TableNode(int cols, int rows){
        this();
	values = new Node[cols][rows];
    }
    
    public TableNode(Node[][] values){
        this();
	this.values = values;
    }

    public String toString(){
        return super.toString()+'&lt;'+values+'&gt;';
    }
</java:code>

  <o:constructor>
    <o:param name="cols"/>
    <o:param name="rows"/>
    <doc:p>Create a new <doc:type/> of the given dimensions</doc:p>
    <java:code>
      int c = (int)cols.numberValue();
      int r = (int)rows.numberValue();
      values = new Node[c][r];
    </java:code>
  </o:constructor>

  <o:function name="set" java:throws="ObjectBoxException">
    <o:param name="col"/>
    <o:param name="row"/>
    <o:param name="value"/>
    <doc:p>Set the value in a given column and row</doc:p>
    <doc:return>The current <doc:type/></doc:return>
    <java:code>
      int c = (int)col.numberValue();
      int r = (int)row.numberValue();
      if(c &lt; 0 || r &lt; 0 || c >= values.length || r >= values[0].length)
        throw new ObjectBoxException("table index out of bounds: "+c+", "+r);
      values[c][r] = value;
      return this;
    </java:code>
    <ut:test>
      <ut:definition>
	<o:set table="Table(3,3)"/>
	<o:do select="$table.set(0, 0, 0).set(1, 1, 2).set(2, 2, 4)"/>
	<o:do select="$table.set(0, 1, 1).set(0, 2, 2)"/>
	<o:do select="$table.set(1, 0, 1).set(1, 2, 3)"/>
	<o:do select="$table.set(2, 0, 2).set(2, 1, 3)"/>
	<o:set sum="0"/>
	<o:for-each name="col" from="0" to="3">
	  <o:for-each name="row" from="0" to="3">
	    <o:set sum="$sum + $table.get($col, $row)"/>
	  </o:for-each>
	</o:for-each>
	<o:return select="$sum"/>
      </ut:definition>
      <ut:result>18</ut:result>
    </ut:test>
  </o:function>

  <o:function name="get">
    <o:param name="col"/>
    <o:param name="row"/>
    <doc:p>Get the value in a given column and row</doc:p>
    <java:code>
      return values[(int)col.numberValue()][(int)row.numberValue()];
    </java:code>
    <ut:test>
      <ut:definition>
	<o:set table="Table(3,3)"/>
	<o:do select="$table.set(1, 2, 'the value in column 1 row 2')"/>
        <o:return select="$table.get(1, 2)"/>
      </ut:definition>
      <ut:result>the value in column 1 row 2</ut:result>
    </ut:test>
  </o:function>


  <o:function name="cols">
    <doc:p>Get the number of columns in this table</doc:p>
    <doc:return>The number of columns</doc:return>
    <java:code>
      return new NumberNode(values.length);
    </java:code>
    <ut:test>
      <ut:definition>
	<o:set table="Table(3,9)"/>
        <o:return select="$table.cols()"/>
      </ut:definition>
      <ut:result>3</ut:result>
    </ut:test>
  </o:function>

  <o:function name="rows">
    <doc:p>Get the number of rows in this table</doc:p>
    <doc:return>The number of rows</doc:return>
    <java:code>
      return new NumberNode(values[0].length);
    </java:code>
    <ut:test>
      <ut:definition>
	<o:set table="Table(3,9)"/>
        <o:return select="$table.rows()"/>
      </ut:definition>
      <ut:result>9</ut:result>
    </ut:test>
  </o:function>

  <o:function name="nodes">
    <doc:p>A Nodeset containing all Nodes in the table.</doc:p>
    <java:code>
      Nodeset set = new org.oXML.xpath.iterator.DynamicNodeset();
      for(int i=0; i&lt;values.length; ++i)
        for(int j=0;j&lt;values[i].length; ++j)
          set.addNode(new StringNode(values[i][j].stringValue()));
      return new NodesetNode(set);
    </java:code>
  </o:function>

  <o:function name="string">
    <doc:p>The concatenated value of all Nodes in the table.</doc:p>
    <java:code>
      StringBuffer buf = new StringBuffer();
      for(int i=0; i&lt;values.length; ++i)
        for(int j=0;j&lt;values[i].length; ++j)
          buf.append(values[i][j].stringValue());
      return new StringNode(buf.toString());
    </java:code>
  </o:function>

</o:type>

